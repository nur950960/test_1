'=============Exceptions==============='
# Исключения - объекты,которые прерывают работу кода, если не были обработаны 

'SuntaxError'
'a = '
# это исключения, которое выходит, когда в коде допущенна синтаксическая ошибка 

'-----------------------------------------------------'
'NameError'
'print(name)'
# исключения, которое выходит, когда мы оброщаемся к несуществующей переменной 

'-------------------------------------------------------------'
'IndexError'
'''
list_ = [1,2,3,4] 
list_[100000]

'''
# исключения, которое выходит при обращении к не существующему индексу
'---------------------------------------------------'
'KeyError'
'''
dict_ = {'a':1, 'b':2}
print(dict_['c])

'''
# исключения, которое выходит при обращении к несуществующему ключу 
'-------------------------------------------------------'
'ValueError'
# когда мы передаем в фуекцию не коректный для нее тип данных 
'''
int('10d')

'''
# когда мы распаковываем итерируемый объект на несколько переменных и кол-во переменных не совпадает с кол-во значений 
'''
a,b,c = [1,2]
'''
'-----------------------------------------------------'
'TypeError'
# когда мы пытаемся использовать методы не свойственные какому-то типу данных 
# когда мы пытаемся передать в фуекцию больше или меньше аргументов, чем принимает функция 
'''
for i in 1:
'''
'------------------------------------------------'
'''
5 + '5'
'''

'''
{[1,2,3]:  'a'}
'''
'------------------------------------------------------'
'ZeroDivisionError'
# выходит когда делим что-то на ноль 
'''
45 / 0 | 100 // 0| 3 % 0 
'''
'----------------------------------------------------'
'AttributeError'
# выходит, когда мы обращаемся к несуществующему аттрибуту или методу объект (тип данных)

'''
[1,2,3].replace(1, 5)

'''
'--------------------------------------------------'
'IndentationError'
# выходит, когда мы не правильно используем отступы 
''' 
      a = 5 
      
'''
'''
for i in range(10):
print(i)
'''
'-------------------------------------------------'
Exception
# исключения, которое создали, что бы его вызывать 

'================= Вызов исключений ===================='

#raise NameError('Я вызвал name_error')

'===================== Try except ========================='

# это - конструкция, которая помогает обробатывать исключения 
# try: # конструкция try используют если разработчик не уверен или знает что в коде есть ошибка и хочет обрпботать ее в except 
#     num = int(input('Введите число: '))
# except ValueError: # конструкция except нужна для обработки исключения, в данном случае исключения ValueError 
#     print('Введите число, а не символ')
# else: # срабатывает когда не вышло ошибки, исключение (когда не сработал except)
#     print(f'Вы ввели число {num}')
# finally: # работает всегда 
#     print('До свидания')
'---------------------------------------------------------------------------------------'
# try: 
#     print(number)       # либо ':', либо Exception можно 
# except (NameError, ValueError, TypeError):
#     print('нет такой переменной, Проверил вот такие исключения: (NameError, ValueError, TypeError)')
# except ZeroDivisionError: 
#     print('Нельзя делить на 0')
'----------------------------------------------'
# try: 
#     raise Exception
# except: # отлавливаются все ошибки
#     print('Отлавленная любая ошибка' )

'-------------------------------------'
# try: 
#     raise ValueError
# except Exception: # отлавливаются все ошибки
#     print('Отлавленная любая ошибка')
'------------------------------------'

# try: 
#     print(1)
# finally: 
#     print(2)d



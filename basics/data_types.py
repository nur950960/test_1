'==============переменные============='
"переменные - это ссылки на ячейку памяти,где хранятся какие то данные. Для дальнейшего использования "

#name = 'Tima'
#age = 25 

#num1 = 15 
#num2 = 20 
#print(num1 + num2)
#print('hello world')

'==============правила наименования переменных================='

#a = 'tima' # можно, но назначение не понятно 
# 1num = 12 - нельзя начинать переменные с чисел 
# num-df = 13 - нельзя использовать символы кроме '_'
# hello world = 'hello world' -  нельзя использовать пробелы в названии переменной 
# print = 'print' - нельзя называть переменные встроенными словами из питона 


# Snake case - python стиль наименнования переменных 
my_name = 'katana' 

# Camel case - стиль остальных языков прошрамированния 
my_name = 'катана'

'===========ввод и ввывод данных=========='
# print () - функция для вывода данных в терминал 
# input () - функция для ввода данных с терминала 

print ('makers')

name = input ('Введите ваше имя:')


'==============Типы данных==============='
# типы данных делятся на два типа; Изменяемые и неизменяемые 

#Изменяемые типы данных:
list_ = [1,2,3, 'makers', True]
dict_ = {'a':1, 'b':12, 'c':0}
set_ = {1, 2,13, 10, True}

#Неизменяемые  типы данных:
int_ = 15 
float_ = 0.5 
complex_ = 5j 
decimal_ = 0.5012030123 
str_ = 'makers bootcamp'
tuple_ = (1,2,123,0, -5)
boolean_1 = True 
boolean_2 = False
None_type = None

# num1 = 10
# num2 = 5  + num2) #сложение = 15 
print(num1 - num2) #вычитание = 5 
print(num1 * num2) #умножения = 50
print(num1 / num2) #дробное деление = 2.0 
print(num1 // num2)#целочисленное деление = 2 
print(num1 % num2) #деление по остатку = 0 
print(num1 ** num2)#возведение в степень =  100000 
print(num1 ** 0.5) #корень числа 
from math import sqrt
print(sqrt(num1))  #корень числа 
print(abs(-num))   # |-10| -> 10 модуль числа 
print(round(5.6))  # 6 (округление в большую сторону)
print(round(5.4))  # 5 
print(round(5.5))  # 6
print(round(5.49)) # 5 (округление идет только по первой цифре после точки)
print(pow(2, 3))   # 2  3 = 8
print(pow(2, 3, 4))# (2  3) % 4 = 0
print(divmod(5, 2))# 2, 0 | (5 // 2) % 2 = 0
#divmod - функция, которая возвращает 2 числа:
#1 число это - целочисленное деление
#2 число это - деление по остатку
divmod(17,3)
#1 действие 17 // 3 = 5 
#2 действие 17 % 3 = 2 




# find(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер первого вхождения или -1
# rfind(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер последнего вхождения или -1
# index(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер первого вхождения или вызывает ValueError
# rindex(str, [start],[end]) - Поиск подстроки в строке. Возвращает номер последнего вхождения или вызывает ValueError
# replace(шаблон, замена) - Замена шаблона
# split(символ) - Разбиение строки по разделителю
# upper() - Преобразование строки к верхнему регистру
# lower() - Преобразование строки к нижнему регистру swapcase() - Переводит символы нижнего регистра в верхний, а верхнего – в нижний
# startswith(str) - Начинается ли строка с шаблона str
# title() - Первую букву каждого слова переводит в верхний регистр, а все остальные в нижний
# capitalize() - Переводит первый символ строки в верхний регистр, а все остальные в нижний
# endswith(str) - Заканчивается ли строка S шаблоном str
# isdigit() - Состоит ли строка из цифр
# isalpha() - Состоит ли строка из букв
# isalnum() - Состоит ли строка из цифр или букв
# islower() - Состоит ли строка из символов в нижнем регистре
# isupper() - Состоит ли строка из символов в верхнем регистре
# isspace() - Состоит ли строка из неотображаемых символов (пробелов, табуляции)
# istitle() - Начинаются ли слова в строке с заглавной буквы

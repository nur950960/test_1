HTTP - протокол, для передачи данных, построенный на TCP/IP 

HTTPS - более защищенная версия HTTP (появляется шифрование и SSL сертификат) 

HTTP - hyperText transfer protocol - протокол передачи гипертекста 

requests - (запрос с клиента к серверу) 
respones - (ответ с сервера к клиенту) 


Методы запроса 
GET - получение данных 
POST - отправка данных на создание 
PUT - полное обновление или  создание нового 
PATCH - частичное обновление 
DELETE - удаление  
HEAD - получение Headers 
OPTIONS - получение списка доступных методов для этой url 
TRACE - трассировка (проверка на связь)


Статус коды ответа 
1xx - информационные 
2хх - успешные 
3хх - перенапрвление 
4хх - ошибка со стороны клинета (Front-end)
5хх - ошибка на стороне сервера (Beck-end)


URL - uniform resource locator('https://www.google.com/search?q=hello') 
DOMAIN - уникальное название ('www.google.com') 
URI - это кусочек URL ('/search')
Query parameters - пары (ключ - знаение) после ? ('q=hello')
HOST - адрес на котрый мы отправляем запрос ( ip address / domain ) (34.16.150.139) 
PORT - номер сервиса в сервере ('postgres:5432'), ('backend:8000'), ('frontend:3000') 



'===========================  ORM  ========================'

API - (application programming interface) 
то как должно выглядеть ваше приложение (ваш проект) 

REST - (representational state transfer) 
архитектурный стиль, которому следует API 

Правила REST:
Единый интерфейс 
Разграничение клиента и сервера 
Многоуровневая система  
Нет сохранения состояние 
Кеширование 
Код предоставляются по запросу 

RESTfull - API - API, котоорая следует всем правилам REST

ORM - (object relational mapping) 
библеотека, которая является переводчиком между языком програмирования и sql 

sqalchemy 
peewee 
django orm  
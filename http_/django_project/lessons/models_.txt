'Model' - это класс, который характирезует структуру вашей таблицы в бд, где аттрибуты - поля в таблице (наследуется от класса 'django.db.models.Model') 

Manager - это классб который предостовляет доступ через методы к 'Django ORM' (которая в свою овередь  отпрвляет все запросы в бд) 

По умолчанию 'manager' добовляется в aттрибут 'objects' в модель 

ПОЛЯ 
Все поля наследуются от класса 'django.db.models.Filed' 

CharFiled - для строковых значений (обязательно нужно указывать 'max_length')
SlugFiled - для хранения slug (короткая метка для чего-либо, содержащая только буквы, цифры, подчеркивания или дефисы, они используюися в URL) 
TextFiled - для хранения текста 
DecimalFiled - для дробных чисел (два обязательных аргумента: 'max_digits' (кол-во цифр целой части), 'decimal_places' (кол-во цифр дробной части))
IntegerFiled - для чисел 
BooleanFiled - для bool значений 

DateFiled - для дат (питоновская версия - datetime.date) (можно указать 'auto_now' - обновляется каждый раз когда запись обновляется, 'auto_now_add' - задается при создании обьекта) 

TimeFiled - только для времени (тоже можно добавить 'auto_now', 'auto_now_add')
DateTimeFiled - для дат и для времени 
DurationFiled - для периода времени 

EmailFiled - для email (имеет встроенную проверку) 
FileFiled - для загрузки файлов ('uplade_to' - для указании директории, где будут хранится файлы, в базе данных будет хранится лишь путь до этих файлов) 
ImageFiled - для заргузки фотографий (тоже самое что FileFiled, но требуется библеотека 'Pillow') 
JSONFiled - для хранения строк в формате json 

ключевые параметры для полей 
null - если True, то будет ставить в бд обьект 'null', если данные не переданны 
blank - (больше для строковых полей), если стоит True, будет ставить 'пустую строку', если данные не переданы 
choices - позволяет ограничить возможные варианты записей в это поле 
default - добовляет значение по умолчание, если данные не были переданы 
editable - если False, то запись нельзя будет поменять 
primary_key - если True, то это поле будет первичным ключем в этой таблице (по умолчанию django создает 'id' )  
unique - если True, то поле должно хранить уникальное значения, если написать то что уже было,  то выйдет ошибка 

python3 manage.py makemigrations 
python3 manage.py migrate
